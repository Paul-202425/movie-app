{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\paulm\\\\OneDrive\\\\Desktop\\\\MovieApp\\\\movie-app\\\\frontend\\\\src\\\\components\\\\MovieList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MovieList.css';\nimport MovieModal from './MovieModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieList({\n  movies,\n  isLoggedIn\n}) {\n  _s();\n  const [ratings, setRatings] = useState({});\n  const [favorites, setFavorites] = useState(() => {\n    const stored = localStorage.getItem('favorites');\n    return stored ? JSON.parse(stored) : [];\n  });\n  const [showingFavorites, setShowingFavorites] = useState(false);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    localStorage.setItem('favorites', JSON.stringify(favorites));\n  }, [favorites]);\n  const handleRating = (movieId, value) => {\n    setRatings(prev => ({\n      ...prev,\n      [movieId]: value\n    }));\n  };\n  const toggleFavorite = movie => {\n    const exists = favorites.find(f => f.id === movie.id);\n    const updated = exists ? favorites.filter(f => f.id !== movie.id) : [...favorites, movie];\n    setFavorites(updated);\n  };\n  const displayedMovies = showingFavorites ? favorites : movies;\n  if (!displayedMovies || displayedMovies.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No movies found. Try searching or showing trending.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowingFavorites(prev => !prev),\n      children: showingFavorites ? 'üîô Back to All Movies' : '‚≠ê View Favorites'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: displayedMovies.map(movie => {\n        const isFav = favorites.some(fav => fav.id === movie.id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-item\",\n          onClick: () => setSelectedMovie(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w200${movie.poster_path}`,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Rating: \", ratings[movie.id] || 'Not rated']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"rating-buttons\",\n            children: [1, 2, 3, 4, 5].map(val => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: e => {\n                e.stopPropagation();\n                handleRating(movie.id, val);\n              },\n              children: val\n            }, val, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), isLoggedIn && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              toggleFavorite(movie);\n            },\n            children: isFav ? '‚òÖ Unfavorite' : '‚òÜ Favorite'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(MovieModal, {\n      movie: selectedMovie,\n      onClose: () => setSelectedMovie(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieList, \"GbO7Eiur9NmHHllT68uFN+RPXUw=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useState","useEffect","MovieModal","jsxDEV","_jsxDEV","MovieList","movies","isLoggedIn","_s","ratings","setRatings","favorites","setFavorites","stored","localStorage","getItem","JSON","parse","showingFavorites","setShowingFavorites","selectedMovie","setSelectedMovie","setItem","stringify","handleRating","movieId","value","prev","toggleFavorite","movie","exists","find","f","id","updated","filter","displayedMovies","length","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","map","isFav","some","fav","src","poster_path","alt","title","val","e","stopPropagation","onClose","_c","$RefreshReg$"],"sources":["C:/Users/paulm/OneDrive/Desktop/MovieApp/movie-app/frontend/src/components/MovieList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MovieList.css';\r\nimport MovieModal from './MovieModal';\r\n\r\nfunction MovieList({ movies, isLoggedIn }) {\r\n  const [ratings, setRatings] = useState({});\r\n  const [favorites, setFavorites] = useState(() => {\r\n    const stored = localStorage.getItem('favorites');\r\n    return stored ? JSON.parse(stored) : [];\r\n  });\r\n  const [showingFavorites, setShowingFavorites] = useState(false);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem('favorites', JSON.stringify(favorites));\r\n  }, [favorites]);\r\n\r\n  const handleRating = (movieId, value) => {\r\n    setRatings((prev) => ({ ...prev, [movieId]: value }));\r\n  };\r\n\r\n  const toggleFavorite = (movie) => {\r\n    const exists = favorites.find((f) => f.id === movie.id);\r\n    const updated = exists\r\n      ? favorites.filter((f) => f.id !== movie.id)\r\n      : [...favorites, movie];\r\n    setFavorites(updated);\r\n  };\r\n\r\n  const displayedMovies = showingFavorites ? favorites : movies;\r\n\r\n  if (!displayedMovies || displayedMovies.length === 0) {\r\n    return <p>No movies found. Try searching or showing trending.</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <button onClick={() => setShowingFavorites((prev) => !prev)}>\r\n        {showingFavorites ? 'üîô Back to All Movies' : '‚≠ê View Favorites'}\r\n      </button>\r\n\r\n      <div className=\"movie-list\">\r\n        {displayedMovies.map((movie) => {\r\n          const isFav = favorites.some((fav) => fav.id === movie.id);\r\n          return (\r\n            <div\r\n              key={movie.id}\r\n              className=\"movie-item\"\r\n              onClick={() => setSelectedMovie(movie)}\r\n            >\r\n              <img\r\n                src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\r\n                alt={movie.title}\r\n              />\r\n              <h3>{movie.title}</h3>\r\n              <p>Rating: {ratings[movie.id] || 'Not rated'}</p>\r\n              <div className=\"rating-buttons\">\r\n                {[1, 2, 3, 4, 5].map((val) => (\r\n                  <button\r\n                    key={val}\r\n                    onClick={(e) => {\r\n                      e.stopPropagation();\r\n                      handleRating(movie.id, val);\r\n                    }}\r\n                  >\r\n                    {val}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n              {isLoggedIn && (\r\n                <button\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    toggleFavorite(movie);\r\n                  }}\r\n                >\r\n                  {isFav ? '‚òÖ Unfavorite' : '‚òÜ Favorite'}\r\n                </button>\r\n              )}\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      {selectedMovie && (\r\n        <MovieModal movie={selectedMovie} onClose={() => setSelectedMovie(null)} />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,iBAAiB;AACxB,OAAOC,UAAU,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,SAASA,CAAC;EAAEC,MAAM;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,MAAM;IAC/C,MAAMa,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAChD,OAAOF,MAAM,GAAGG,IAAI,CAACC,KAAK,CAACJ,MAAM,CAAC,GAAG,EAAE;EACzC,CAAC,CAAC;EACF,MAAM,CAACK,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACoB,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAExDC,SAAS,CAAC,MAAM;IACda,YAAY,CAACQ,OAAO,CAAC,WAAW,EAAEN,IAAI,CAACO,SAAS,CAACZ,SAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMa,YAAY,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;IACvChB,UAAU,CAAEiB,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACF,OAAO,GAAGC;IAAM,CAAC,CAAC,CAAC;EACvD,CAAC;EAED,MAAME,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,MAAM,GAAGnB,SAAS,CAACoB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,KAAK,CAACI,EAAE,CAAC;IACvD,MAAMC,OAAO,GAAGJ,MAAM,GAClBnB,SAAS,CAACwB,MAAM,CAAEH,CAAC,IAAKA,CAAC,CAACC,EAAE,KAAKJ,KAAK,CAACI,EAAE,CAAC,GAC1C,CAAC,GAAGtB,SAAS,EAAEkB,KAAK,CAAC;IACzBjB,YAAY,CAACsB,OAAO,CAAC;EACvB,CAAC;EAED,MAAME,eAAe,GAAGlB,gBAAgB,GAAGP,SAAS,GAAGL,MAAM;EAE7D,IAAI,CAAC8B,eAAe,IAAIA,eAAe,CAACC,MAAM,KAAK,CAAC,EAAE;IACpD,oBAAOjC,OAAA;MAAAkC,QAAA,EAAG;IAAmD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EACnE;EAEA,oBACEtC,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAQuC,OAAO,EAAEA,CAAA,KAAMxB,mBAAmB,CAAEQ,IAAI,IAAK,CAACA,IAAI,CAAE;MAAAW,QAAA,EACzDpB,gBAAgB,GAAG,uBAAuB,GAAG;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,eAETtC,OAAA;MAAKwC,SAAS,EAAC,YAAY;MAAAN,QAAA,EACxBF,eAAe,CAACS,GAAG,CAAEhB,KAAK,IAAK;QAC9B,MAAMiB,KAAK,GAAGnC,SAAS,CAACoC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACf,EAAE,KAAKJ,KAAK,CAACI,EAAE,CAAC;QAC1D,oBACE7B,OAAA;UAEEwC,SAAS,EAAC,YAAY;UACtBD,OAAO,EAAEA,CAAA,KAAMtB,gBAAgB,CAACQ,KAAK,CAAE;UAAAS,QAAA,gBAEvClC,OAAA;YACE6C,GAAG,EAAE,kCAAkCpB,KAAK,CAACqB,WAAW,EAAG;YAC3DC,GAAG,EAAEtB,KAAK,CAACuB;UAAM;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,eACFtC,OAAA;YAAAkC,QAAA,EAAKT,KAAK,CAACuB;UAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtBtC,OAAA;YAAAkC,QAAA,GAAG,UAAQ,EAAC7B,OAAO,CAACoB,KAAK,CAACI,EAAE,CAAC,IAAI,WAAW;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjDtC,OAAA;YAAKwC,SAAS,EAAC,gBAAgB;YAAAN,QAAA,EAC5B,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAACO,GAAG,CAAEQ,GAAG,iBACvBjD,OAAA;cAEEuC,OAAO,EAAGW,CAAC,IAAK;gBACdA,CAAC,CAACC,eAAe,CAAC,CAAC;gBACnB/B,YAAY,CAACK,KAAK,CAACI,EAAE,EAAEoB,GAAG,CAAC;cAC7B,CAAE;cAAAf,QAAA,EAEDe;YAAG,GANCA,GAAG;cAAAd,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOF,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,EACLnC,UAAU,iBACTH,OAAA;YACEuC,OAAO,EAAGW,CAAC,IAAK;cACdA,CAAC,CAACC,eAAe,CAAC,CAAC;cACnB3B,cAAc,CAACC,KAAK,CAAC;YACvB,CAAE;YAAAS,QAAA,EAEDQ,KAAK,GAAG,cAAc,GAAG;UAAY;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChC,CACT;QAAA,GAhCIb,KAAK,CAACI,EAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAiCV,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELtB,aAAa,iBACZhB,OAAA,CAACF,UAAU;MAAC2B,KAAK,EAAET,aAAc;MAACoC,OAAO,EAAEA,CAAA,KAAMnC,gBAAgB,CAAC,IAAI;IAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC3E;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAClC,EAAA,CArFQH,SAAS;AAAAoD,EAAA,GAATpD,SAAS;AAuFlB,eAAeA,SAAS;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}